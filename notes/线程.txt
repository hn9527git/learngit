创建线程不对进程拷贝，和进程共用所有资源
线程和进程不分离
pthread_create()创建线程
编译时加上 -pthread
如果创建线程的进程结束了，所有线程都结束
将创建线程的进程称之为主线程
如果一个进程没有创建线程，即可以称为进程，也可以成为线程
cpu最小的调度单位为线程
避免资源竞争问题之线程同步
1.线程锁》》互斥量》》原子操作》》不能被打断
2.信号量;将所有共享数据资源数据化，使用资源前检查信号量的值，大于零表示有资源可用
等于零表示没有资源可用，则阻塞等待
线程结束：exit是结束进程的函数，如果在线程中调用exit会把
进程和所有的线程都结束；最好不要在线程中调用
1，pthread_exit（）结束本线程，对其他线程没有影响
2，pthread_cancel（）结束指定线程，接收到结束请求的线程会终止运行
在处理重要数据时可以设置为不接受结束请求（阻塞），pthread_setcancelstate，
等待线程结束pthread_join()，也可以设置分离线程，由系统回收线程资源；